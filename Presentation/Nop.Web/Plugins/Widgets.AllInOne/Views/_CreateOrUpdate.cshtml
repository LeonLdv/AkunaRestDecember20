@using Nop.Services.Events;
@using Nop.Web.Framework.Events;
@model Nop.Plugin.Widgets.AllInOnePlugin.Models.AllInOneModel
@inject IEventPublisher eventPublisher

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<div class="content">
    <div class="form-horizontal">
        <nop-tabs id="blog-post-edit">
            <nop-tab asp-name="tab-info" asp-title="@T("Plugins.Widgets.AllInOne.Info")" asp-default="true">
                @await Html.PartialAsync("~/Plugins/Widgets.AllInOne/Views/_CreateOrUpdate.Info.cshtml", Model)
            </nop-tab>
            <nop-tab asp-name="tab-css" asp-title="@T("Plugins.Widgets.AllInOne.CssScripts")">
                @await Html.PartialAsync("~/Plugins/Widgets.AllInOne/Views/_CreateOrUpdate.CSS.cshtml", Model)
            </nop-tab>
        </nop-tabs>
    </div>
</div>

@{
    //custom tabs
    var eventMessage = new AdminTabStripCreated(this.Html, "allinone-edit");
    eventPublisher.Publish(eventMessage);
    foreach (var eventBlock in eventMessage.BlocksToRender)
    {
        @eventBlock
    }
}


